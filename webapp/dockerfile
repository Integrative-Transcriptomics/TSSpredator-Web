# first stage build the frontend
FROM node:21-alpine3.18 as build


WORKDIR /build
COPY src/ src/
COPY public/ public/
COPY package.json .
COPY vite.config.mjs .
COPY .yarnrc.yml .
COPY index.html .


# build using yarn 
RUN corepack enable yarn
RUN yarn set version berry
RUN yarn install
RUN yarn build

FROM ubuntu:22.04
# Set non-interactive mode for apt-get
ENV DEBIAN_FRONTEND=noninteractive

# Set the working directory in the container to /app
WORKDIR /app


# Update package lists and install required packages
RUN apt-get update && apt-get install -y \
    libstdc++6 \
    gcc \
    g++ \
    wget \
    python3.11 \
    python3.11-dev \
    python3.11-venv \
    python3-pip \
    openjdk-17-jre-headless \
    libbz2-dev \
    libcurl4 \
    libkrb5-dev \
    zlib1g-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*
# copy the server directory and dist from previous buildstage into the container at /app
COPY --from=build /build/dist /app/dist
COPY server_tsspredator /app/server_tsspredator
COPY requirements.txt /app
COPY setup.py /app

RUN wget https://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedGraphToBigWig -P /app
RUN chmod +x /app/bedGraphToBigWig

RUN python3.11 -m venv /app/env_tss_predator_web
ENV PATH="/app/env_tss_predator_web/bin:$PATH"
RUN python3.11  -m pip install --upgrade pip
# install python dependencies
RUN python3.11  -m pip install -r requirements.txt

# Install the server package
RUN pip install -e .
RUN rm -rf /app/requirements.txt 
RUN rm -rf /app/setup.py

# Install java 17
COPY server_tsspredator/TSSpredator.jar /app

# Make port 5001 available to the world outside this container
EXPOSE 5001
ENV TSSPREDATOR_DATA_PATH="/data"
ENV TSSPREDATOR_SERVER_LOCATION="/app"
ENV TSSPREDATOR_TEMPDATA="/tmpData"
ENV TSSPREDATOR_REDIS_HOST="redis"

# The command that will be executed when the container is run
CMD ["gunicorn","--workers", "3","--timeout","500","--graceful-timeout", "500", "--bind", "0.0.0.0:5001", "--log-level='debug'", "server_tsspredator.wsgi:tsspredator"]